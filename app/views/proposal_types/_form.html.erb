<h2><%= @title %></h2>
<div id="create_proposal">
  <%= simple_form_for (@group && !in_subdomain?) ? [@group, @proposal] : @proposal, validate: true do |f| %>
    <%= f.input :title,
                label: t('pages.proposals.new.title_synthetic'),
                placeholder: t('pages.proposals.new.title_placeholder'),
                input_html: { autocomplete: :off, data: { fv_trigger: 'keyup' } } %>

    <% if @group && @group.enable_areas && @group.group_areas.any? %>
      <% available_areas = current_user.scoped_areas(@group, :insert_proposals) %>
      <p>
        <% if available_areas.any? %>
          <%= f.input :group_area_id, as: :select,
                      collection: available_areas.collect { |p| [p.name, p.id] },
                      prompt: t('pages.proposals.new.no_work_area_selected') %>
        <% else %>
          <%= t('pages.proposals.new.cannot_add_proposal_in_work_area') %>
        <% end %>
      </p>
    <% end %>

    <p>
      <%= f.input 'interest_borders_tkn', input_html: { "data-pre" => @proposal.interest_borders.to_json, placeholder: t('pages.proposals.new.interest_borders_tkn_placeholder'), style: "width:100%" } %>
    </p>

    <p>
      <% if @group %>
        <input type="hidden" name="from_group" value="<%= @group.id %>"/>
      <% end %>
      <%= f.hidden_field :private %>
      <%= f.hidden_field :proposal_type_id %>
      <%= f.hidden_field :proposal_votation_type_id %>
      <%= f.hidden_field :topic_id %>
    </p>

    <% if @proposal.change_advanced_options %>
      <fieldset>
        <legend><%= t('pages.proposals.new.advanced_options') %></legend>
        <%= f.input :anonima %>
        <%= f.input :visible_outside %>
        <%= f.input :secret_vote %>
      </fieldset>
    <% end %>


    <% if ::Configuration.proposal_categories %>
      <div class="inputs">
        <%= f.label :proposal_category_id %>
        <%= f.select :proposal_category_id,
                     options_for_select(ProposalCategory.all.collect do |p|
                       [p.description, p.id, { 'data-imagesrc' => image_path("proposal_categories/#{p.id}_s.png") }]
                     end,
                                        @proposal.proposal_category_id),
                     { include_blank: t('pages.proposals.new.category_prompt') },
                     { required: true, style: 'width:100%' } %>
      </div>
    <% end %>

    <% if ::Configuration::folksonomy %>
      <p>
        <%= f.input :tags_list, input_html: { placeholder: t('pages.proposals.new.tags_list_placeholder'), style: "width:100%" } %>
      </p>
    <% end %>


    <div class="step">
      <div id="suggestions">
        <!-- TODO: add suggestions here -->
      </div>
    </div>

    <%= f.fields_for :sections, @proposal.sections.first do |s| %>
      <%= s.input :title, as: :hidden %>
      <%= s.input :seq, as: :hidden %>
      <%= s.fields_for :paragraphs, @proposal.sections.first.paragraphs.build(seq: 1) do |p| %>
        <%= p.input :content, as: :text, label: @proposal.sections.first.question, input_html: { rows: 5 } %>
        <div class="suggestion_box">
          <%= raw @proposal.sections.first.suggestion %>
        </div>
        <%= p.input :seq, as: :hidden %>
      <% end %>
    <% end %>

    <%= render partial: '/proposal_types/quorum_choice', locals: { f: f } %>
    <p>
      <%= link_to t('buttons.cancel'), :back, class: 'btn' unless request.xhr? %>
      <%= f.submit t('pages.proposals.new.create_button'), class: 'btn blue disable', data: { disable_with: t('loading') } %>
    </p>
  <% end %>
</div>
